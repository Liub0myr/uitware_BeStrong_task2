# https://aka.ms/yaml

trigger:
- main

pr:
- main

variables:
  - group: terraform_vars

stages:
- stage: Test
  jobs:
  - job: validate
    displayName: 'Validation'
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Terraform Install'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: $(backendServiceArm)
        backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
        backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
        backendAzureRmContainerName: $(backendAzureRmContainerName)
        backendAzureRmKey: '$(backendAzureRmKey).tfstate'
      displayName: 'Terraform Init'
    - task: TerraformTaskV4@4
      displayName: 'Validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
    - task: TerraformTaskV4@4
      displayName: 'Terraform plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: $(environmentServiceNameAzureRM)
        commandOptions: '-input=false'
      env:
          TF_VAR_BeStrong_azSQL_login: $(BeStrong_azSQL_login)
          TF_VAR_BeStrong_azSQL_password: $(BeStrong_azSQL_password)

- stage: deploy
  condition: ne(variables['Build.Reason'], 'PullRequest') # Skip for PR
  jobs:
  - job: deploy
    displayName: 'Deploy'
    variables:
    - group: terraform_creds
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Terraform Install'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: $(backendServiceArm)
        backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
        backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
        backendAzureRmContainerName: $(backendAzureRmContainerName)
        backendAzureRmKey: '$(backendAzureRmKey).tfstate'
      displayName: 'Terraform Init'
    - task: TerraformTaskV4@4
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: $(environmentServiceNameAzureRM)
        commandOptions: '-input=false -auto-approve'
      env:
          TF_VAR_BeStrong_azSQL_login: $(BeStrong_azSQL_login)
          TF_VAR_BeStrong_azSQL_password: $(BeStrong_azSQL_password)
